"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.opportunityRouter = void 0;
const express_1 = require("express");
const opportunity_controllers_1 = require("../controllers/opportunity.controllers");
const application_routes_1 = require("./application.routes");
const validateBody_middlewares_1 = require("../middlewares/validateBody.middlewares");
const opportunity_schemas_1 = require("../schemas/opportunity.schemas");
const isOpportunityIdValid_middlewares_1 = require("../middlewares/isOpportunityIdValid.middlewares");
const tsyringe_1 = require("tsyringe");
const validateToken_middlewares_1 = require("../middlewares/validateToken.middlewares");
const opportunity_services_1 = require("../services/opportunity.services");
const isOpportunityOwner_middlewares_1 = require("../middlewares/isOpportunityOwner.middlewares");
tsyringe_1.container.registerSingleton("OpportunityServices", opportunity_services_1.OpportunityServices);
const opportunityControllers = tsyringe_1.container.resolve(opportunity_controllers_1.OpportunityControllers);
exports.opportunityRouter = (0, express_1.Router)();
exports.opportunityRouter.post("/", validateToken_middlewares_1.ValidateToken.execute, validateBody_middlewares_1.ValidateBody.execute(opportunity_schemas_1.opportunityCreateSchema), (req, res) => opportunityControllers.create(req, res));
exports.opportunityRouter.get("/", (req, res) => opportunityControllers.findMany(req, res));
exports.opportunityRouter.get("/user", validateToken_middlewares_1.ValidateToken.execute, (req, res) => opportunityControllers.findMany(req, res));
exports.opportunityRouter.use("/:id", isOpportunityIdValid_middlewares_1.IsOpportunityIdValid.execute);
exports.opportunityRouter.get("/:id", validateToken_middlewares_1.ValidateToken.execute, isOpportunityOwner_middlewares_1.IsOpportunityOwner.execute, (req, res) => opportunityControllers.findOne(req, res));
exports.opportunityRouter.patch("/:id", validateToken_middlewares_1.ValidateToken.execute, isOpportunityOwner_middlewares_1.IsOpportunityOwner.execute, validateBody_middlewares_1.ValidateBody.execute(opportunity_schemas_1.opportunityUpdateSchema), (req, res) => opportunityControllers.update(req, res));
exports.opportunityRouter.delete("/:id", validateToken_middlewares_1.ValidateToken.execute, isOpportunityOwner_middlewares_1.IsOpportunityOwner.execute, (req, res) => opportunityControllers.delete(req, res));
exports.opportunityRouter.use("/", application_routes_1.applicationRouter);
